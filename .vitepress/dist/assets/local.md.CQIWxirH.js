import{_ as s,c as a,o as i,a1 as e}from"./chunks/framework.DTR-fORK.js";const u=JSON.parse('{"title":"Local Setup","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"local.md","filePath":"local.md"}'),t={name:"local.md"},n=e(`<h1 id="local-setup" tabindex="-1">Local Setup <a class="header-anchor" href="#local-setup" aria-label="Permalink to &quot;Local Setup&quot;">â€‹</a></h1><p>There are a few parts to this puzzle but not that bad for setting up locally. It is honestly just a standard Laravel app that uses PostGres since it has a vector extension.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Sometimes the best way to learn how to setup a system is to look at the CI files since they are setting up a system every build. You can see that here <code>.github/workflows/ci-cd.yml</code></p></div><p>There is a video <a href="https://www.youtube.com/watch?v=aTuw6W_8CPE&amp;t=3s" target="_blank" rel="noreferrer">https://www.youtube.com/watch?v=aTuw6W_8CPE&amp;t=3s</a> for those who like to learn that way.</p><h2 id="laravel-php-setup" tabindex="-1">Laravel PHP Setup <a class="header-anchor" href="#laravel-php-setup" aria-label="Permalink to &quot;Laravel PHP Setup&quot;">â€‹</a></h2><p>I use Herd <a href="https://herd.laravel.com/" target="_blank" rel="noreferrer">https://herd.laravel.com/</a> and that does most of the work. If you follow their docs you will be setup in minutes.</p><h2 id="postgres" tabindex="-1">PostGres <a class="header-anchor" href="#postgres" aria-label="Permalink to &quot;PostGres&quot;">â€‹</a></h2><p>I use the one here <a href="https://postgresapp.com/" target="_blank" rel="noreferrer">https://postgresapp.com/</a> even though I have Herd Pro. I could not get the extension to install but maybe now it would work.</p><p>I know DBEngin is great too <a href="https://dbngin.com/" target="_blank" rel="noreferrer">https://dbngin.com/</a> but the extension did not install at the time.</p><h3 id="installation-steps" tabindex="-1">Installation Steps <a class="header-anchor" href="#installation-steps" aria-label="Permalink to &quot;Installation Steps&quot;">â€‹</a></h3><p>The database will not setup itself like MySQL so you have to do two steps here. Using TablePlus I open the database and then make the schema <code>larachain</code></p><p>Then I open that database and run this:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EXTENSION vector;</span></span></code></pre></div><p>To clone the repository, run the following command in your terminal:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/LlmLaraHub/laralamma.git</span></span></code></pre></div><p>Then</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.example</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div><p>And run the normal install steps:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>Then seed the user:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate:fresh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --seed</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can see on the bottom of the .env the username and password for seeding admin user.</p></div><p>Finally you have to run these long running processes one in each terminal:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> horizon:watch</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reverb:start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --debug</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h2 id="ollama-openai-claude-ðŸ¤”" tabindex="-1">Ollama, OpenAi, Claude ðŸ¤” <a class="header-anchor" href="#ollama-openai-claude-ðŸ¤”" aria-label="Permalink to &quot;Ollama, OpenAi, Claude ðŸ¤”&quot;">â€‹</a></h2><p>You have a lot of choices here. If you look in the path <code>config/llmdriver.php</code></p><p>You will see you can set <code>.env</code> settings for different API_TOKENs and models.</p><p>Lets talk about Ollama first.</p><p>If you install Ollama <a href="https://ollama.com/" target="_blank" rel="noreferrer">https://ollama.com/</a> it is a big win because all your embeddings are free!</p><p>So just follow their instructions to get it running. You can then pull:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ollama</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> llama3</span></span></code></pre></div><p>To get started with the defaults LLM and:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ollama</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mxbai-embed-large</span></span></code></pre></div><p>For embedding data.</p><p>Now run this at the command line:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">launchctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setenv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OLLAMA_NUM_PARALLEL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span></code></pre></div><p>To get the most out of ollama for now. Then restart it.</p><p>You can test it is working by running these commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://127.0.0.1:11434/api/tags</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:11434/api/tags</span></span></code></pre></div><h2 id="php-settings" tabindex="-1">PHP Settings <a class="header-anchor" href="#php-settings" aria-label="Permalink to &quot;PHP Settings&quot;">â€‹</a></h2><p>If you have issues with PHP try the following.</p><div class="language-script vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">script</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>max_execution_time=0</span></span>
<span class="line"><span>upload_max_filesize=500M</span></span>
<span class="line"><span>memory_limit=-1</span></span>
<span class="line"><span>post_max_size = 100M</span></span></code></pre></div><h2 id="pulling-down-the-latest-code" tabindex="-1">Pulling down the latest code! <a class="header-anchor" href="#pulling-down-the-latest-code" aria-label="Permalink to &quot;Pulling down the latest code!&quot;">â€‹</a></h2><p>Just to make sure it all works do these commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pennant:purge</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimize:clear</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span></span></code></pre></div>`,47),l=[n];function p(h,o,r,d,c,k){return i(),a("div",null,l)}const F=s(t,[["render",p]]);export{u as __pageData,F as default};
